---
import TeamMemberFull from '@components/TeamMemberFull.astro';

const {frontmatter} = Astro.props;
---

{() => {

  // Turn camelCased frontmatter into readable text
  function camelCaseToWords(str){
    return str.match(/^[a-z]+|[A-Z][a-z]*/g).map(function(x){
      return x[0].toUpperCase() + x.substr(1).toLowerCase();
    }).join(' ');
  };

  // Check if any values contain underscore(*denotes item 'in-progress')
  function findSubstring(arr){
    if(arr.find(str=>str.includes('_'))){
      return true
    }
  }

  // Iterate through key/value pairs in project/*.mdx frontmatter
  return (
    <div class="team">
      <div class="team-content">
        {Object.entries(frontmatter.progress).map(([key, val]) => (
          <section class={`team-item ${key}`}>
            <div class="lev1">
              <span>{camelCaseToWords(key)}</span>
            </div>
            {Object.entries(val)?.map(([k, v]) => (
              <div class='lev2'>
                <span class={`indicator ${findSubstring(v) ? 'in-progress' : ''} ${v.length && !findSubstring(v) ? 'done' : ''}`}
                      data-tooltip={`
                        ${findSubstring(v) ? 'In-progress' : ''}
                        ${v.length && !findSubstring(v) ? 'Done' : ''}
                        ${!v.length ? 'Not Started' : ''}
                `}></span>
                <span>{camelCaseToWords(k) + (v.length > 1 && k === 'producer' ? 's' : '')}:</span>
                <TeamMemberFull members={v} />
              </div>
            ))}
          </section>
        ))}
      </div>
    </div>
  )
}}

<style lang="scss">
  @import '/src/assets/styles/base/variables.scss';

  $indicator-padding:    18px;
  $card-bg:              $theme-base;

  .team, section {
    display: flex;
    flex-direction: column;
  }
  section {
    margin: 0.25rem 0;
  }
  .team {
    position: relative;
    border-radius: 12px;
    padding: 0 1.5rem;
    // background: $theme-base;
    background: $card-bg;
    // box-shadow: inset 0 0 0 3px rgba($theme-bg, 0.08);
  }
  .team-content {
    position: relative;
    padding: $indicator-padding ($indicator-padding * 0.25);
    padding-bottom: $indicator-padding * 1.25;
    &:before {
      position: absolute;
      content: '';
      top: 2rem;
      bottom: 1.25rem;
      left: ($indicator-padding * 0.5) - 1px;
      width: 3px;
      background: rgba($theme-bg, 0.15);
      border-radius: 3px;
    }
  }
  .team-item {
    padding-left: $indicator-padding;
  }
  .lev1, .lev2 {
    display: flex;
    padding: calc($gutter-h * 0.25) 0;
    > div {
      display: flex;
      flex-wrap: wrap;
      column-gap: 0.25rem;
      row-gap: 0.25rem;
    }
  }
  .lev1 {
    flex-direction: column;
    font-weight: bold;
    margin-bottom: 0.25rem;
    span {
      font-size: 16px;
    }
  }
  .lev2 {
    $size:   19px;

    align-items: flex-start;
    align-items: start;
    justify-content: flex-start;
    flex-wrap: wrap;
    color: rgba($theme-bg, 0.57);
    padding-left: $gutter-h;
    column-gap: 0.25rem;
    row-gap: 0.4rem;
    margin-bottom: 0.25rem;
    > * {
      display: inline-flex;
    }
    > span {
      margin-right: 0.25rem;
      line-height: 21px;
    }
    .indicator {
      position: absolute;
      top: 3px;
      left: -$indicator-padding * 1.25;
      height: $size;
      min-width: $size;
      border-radius: $size;
      background: $card-bg;
      box-shadow: inset 0 0 0 1px rgba($theme-bg, 0.25);
      border: 3px solid $card-bg;
      &.done {
        background: $brand-green;
        box-shadow: none;
      }
      &.in-progress {
        background: $brand-orange;
        box-shadow: none;
      }
    }
  }
  .team-member {
    padding-left: 7px;
  }
</style>